import Head from "next/head";
import { useRouter } from "next/router";
import { Pagination } from "@geist-ui/core";
import { getAnimes } from "../../api";
import AnimeCard from "../../components/AnimeCard";
import { Grid, Heading, Container, Text } from "../../components/styled";

const Home = ({ animes, pageInfo }) => {
  const router = useRouter();
  const { currentPage, lastPage } = pageInfo;

  return (
    <>
      <Head>
        <title>Anilist Collection</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Heading>Explore Anime</Heading>

      <Container>
        {animes.length === 0 && <Text center>No data available.</Text>}
        <Grid>
          {animes.map(
            ({
              id,
              title,
              description,
              episodes,
              coverImage,
              averageScore,
            }) => (
              <AnimeCard
                key={id}
                id={id}
                title={title}
                description={description}
                episodes={episodes}
                coverImage={coverImage}
                averageScore={averageScore}
              />
            )
          )}
        </Grid>

        <Container center>
          <Pagination
            page={currentPage > lastPage ? currentPage : currentPage}
            initialPage={currentPage > lastPage ? currentPage : currentPage}
            count={lastPage}
            limit={5}
            margin="auto"
            onChange={(newPage) =>
              router.push({ pathname: "/anime", query: { page: newPage } })
            }
          />
        </Container>
      </Container>
    </>
  );
};

export default Home;

export async function getServerSideProps(context) {
  const { page } = context.query;

  const { data } = await getAnimes(parseInt(page) || 1, 10);

  const animes = data.Page.media;
  const pageInfo = data.Page.pageInfo;
  return {
    props: { animes, pageInfo },
  };
}
